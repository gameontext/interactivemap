/*******************************************************************************
 * Copyright (c) 2016 IBM Corp.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *******************************************************************************/

//Conversions between the Game On! world and the SVG display tiles

/*
 * Get the current zoom level, taking into account that we have reversed the zoom level
 */
function getZoom() {
	return map.getMaxZoom() - map.getZoom();
}

//sizes and offsets are determined by the zoom level
var sizes = [255, 85, 51];
var offsets = [0, 85, 102];

/*
 * Converts the GEO JSON generated by the map service into screen co-ordinates.
 * The map service GEO JSON lat lng are actually the grid co-ordinates from the
 * GameOn! world. These need to be converted into a pixel point and then into the
 * layer lat lng.
 */
function convertGeoJson(latlng, log) {
	var zoom = getZoom();							//zoom level sets rooms per tile
	var size = sizes[zoom];		//default room size per tile
	var offset = offsets[zoom];
	var x = (latlng.lng * size) + offset;
	var y = (latlng.lat * size * -1) + offset;
	var sw = L.point(x, y + size);	//new point, SW of the bounds
	var ne = L.point(x + size, y);	//new point, NE of the bounds
	var latsw = map.unproject(sw);
	var latne = map.unproject(ne);
	var bounds = L.latLngBounds(latsw, latne);
	if(log) {
		console.log("GEO JSON conversion : original = " + latlng + ", tile size = " + size + ", offset = " + offset);
		console.log("SW point = " + sw + ", NE point = " + ne);
		console.log("SW latlng = " + latsw + ", NE latlng = " + latne);
	}
	return bounds;
}
